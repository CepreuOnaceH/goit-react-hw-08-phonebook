{"version":3,"file":"static/js/934.c772e9d7.chunk.js","mappings":"sLAEaA,E,QAAgBC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mzC,sJCsNxC,EA9MgB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAoC,YADzBC,EAAAA,EAAAA,MACYC,SAC7BC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GActBG,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OAClBnB,EACkB,UAAhBmB,EAAOZ,KACTK,EAASO,EAAOC,OACS,aAAhBD,EAAOZ,MAChBS,EAAYG,EAAOC,OAGD,SAAhBD,EAAOZ,KACTC,EAAQW,EAAOC,OACU,UAAhBD,EAAOZ,KAChBK,EAASO,EAAOC,OACS,aAAhBD,EAAOZ,MAChBS,EAAYG,EAAOC,MAGzB,EACA,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJF,EAAAA,EAAAA,MAAC3B,EAAAA,EAAa,CAAC+B,aAAa,MAAMC,SAhCjB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfhC,EACEiC,EAAAA,EAAAA,SAAoB,CAClBxB,KAAMsB,EAAKG,SAASzB,KAAKa,MACzBT,MAAOkB,EAAKG,SAASrB,MAAMS,MAC3BL,SAAUc,EAAKG,SAASjB,SAASK,SAGrCS,EAAKI,OACP,EAqB6DV,SAAA,EACvDF,EAAAA,EAAAA,MAAA,OAAKa,UAAU,kBAAiBX,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SACEW,YAAY,OACZC,GAAG,OACHC,KAAK,OACL9B,KAAK,OACL+B,SAAUrB,EACVG,MAAOb,KAETiB,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,OAAMhB,SAAC,aAExBF,EAAAA,EAAAA,MAAA,OAAKa,UAAU,kBAAiBX,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SACEW,YAAY,QACZC,GAAG,QACHC,KAAK,QACL9B,KAAK,QACL+B,SAAUrB,EACVG,MAAOT,KAETa,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,QAAOhB,SAAC,cAEzBF,EAAAA,EAAAA,MAAA,OAAKa,UAAU,kBAAiBX,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SACEW,YAAY,WACZC,GAAG,WACHC,KAAK,WACL9B,KAAK,WACL+B,SAAUrB,EACVG,MAAOL,KAETS,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,WAAUhB,SAAC,iBAE5BC,EAAAA,EAAAA,KAAA,UACEgB,SACExC,IACQW,GAASI,EAAS0B,QAAU,KAC5BlC,GAAUI,GAASI,EAAS0B,QAAU,GAEhDJ,KAAK,SAAQd,SAQP,sBAMhB,EC3FA,EAVyB,WACvB,OACEC,EAAAA,EAAAA,KAAC9B,EAAAA,EAAa,CAAA6B,UACZC,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAAAnB,UACRC,EAAAA,EAAAA,KAACmB,EAAO,OAIhB,C","sources":["components/RegForm/RegFormStyles.styled.js","components/RegForm/RegForm.jsx","pages/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegFormStyles = styled.form`\n  padding-top: 40px;\n  padding-bottom: 20px;\n  row-gap: 40px;\n  display: flex;\n  flex-direction: column;\n\n  margin-left: auto;\n  margin-right: auto;\n  /* label {\n    display: flex;\n    flex-direction: column;\n    row-gap: 10px;\n    align-items: center;\n  } */\n  .label-container {\n    width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    display: inline-block;\n  }\n\n  label {\n    position: absolute;\n    left: 8px;\n    bottom: 50%;\n    transition: 250ms linear;\n    transform: translate(0, 50%);\n    font-size: 14px;\n    color: blue;\n  }\n\n  input:focus + label {\n    transform: translateY(-100%);\n  }\n\n  input:not(:placeholder-shown) + label {\n    transform: translateY(-100%);\n  }\n\n  input {\n    border-radius: 8px;\n    padding-left: 10px;\n    height: 20px;\n  }\n\n  input::placeholder {\n    opacity: 0;\n  }\n\n  button {\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 8px;\n    padding: 8px 12px;\n    background-color: green;\n    color: white;\n    transition: 250ms linear;\n    column-gap: 8px;\n  }\n\n  button:hover,\n  button:focus {\n    background-color: blue;\n  }\n\n  button[disabled] {\n    background-color: gray;\n  }\n`;\n","import { useState } from 'react';\nimport operations from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n// import { getIsPending } from 'redux/auth/selectors';\n// import { PiSpinnerGap } from 'react-icons/pi';\n// import { MdAppRegistration } from 'react-icons/md';\n// import { BiLogIn } from 'react-icons/bi';\nimport { RegFormStyles } from './RegFormStyles.styled';\n\nconst RegForm = () => {\n  const dispatch = useDispatch();\n  // const isPending = useSelector(getIsPending);\n  const location = useLocation();\n  const isLoginPage = location.pathname === '/login';\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      operations.register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n  const handleChange = ({ target }) => {\n    if (isLoginPage) {\n      if (target.name === 'email') {\n        setEmail(target.value);\n      } else if (target.name === 'password') {\n        setPassword(target.value);\n      }\n    } else {\n      if (target.name === 'name') {\n        setName(target.value);\n      } else if (target.name === 'email') {\n        setEmail(target.value);\n      } else if (target.name === 'password') {\n        setPassword(target.value);\n      }\n    }\n  };\n  return (\n    <>\n      <h2>Registration page</h2>\n      <RegFormStyles autoComplete=\"off\" onSubmit={handleSubmit}>\n        <div className=\"label-container\">\n          <input\n            placeholder=\"Name\"\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            value={name}\n          />\n          <label htmlFor=\"name\">Name</label>\n        </div>\n        <div className=\"label-container\">\n          <input\n            placeholder=\"Email\"\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            value={email}\n          />\n          <label htmlFor=\"email\">Email</label>\n        </div>\n        <div className=\"label-container\">\n          <input\n            placeholder=\"Password\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            value={password}\n          />\n          <label htmlFor=\"password\">Password</label>\n        </div>\n        <button\n          disabled={\n            isLoginPage\n              ? !(!!email && password.length >= 7)\n              : !(!!name && !!email && password.length >= 7)\n          }\n          type=\"submit\"\n        >\n          {/* {isPending ? (\n            <PiSpinnerGap className=\"spinner\" size={16} />\n          ) : isLoginPage ? (\n            <BiLogIn size={16} />\n          ) : (\n            <MdAppRegistration size={16} />\n          )} */}\n          Registration\n        </button>\n      </RegFormStyles>\n    </>\n  );\n};\n// const RegForm = () => {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const isPending = useSelector(getIsPending);\n//   const dispatch = useDispatch();\n//   const location = useLocation();\n\n//   const isLoginPage = location.pathname === '/login';\n\n//   const handleChange = ({ target }) => {\n//     if (isLoginPage) {\n//       if (target.name === 'email') {\n//         setEmail(target.value);\n//       } else if (target.name === 'password') {\n//         setPassword(target.value);\n//       }\n//     } else {\n//       if (target.name === 'name') {\n//         setName(target.value);\n//       } else if (target.name === 'email') {\n//         setEmail(target.value);\n//       } else if (target.name === 'password') {\n//         setPassword(target.value);\n//       }\n//     }\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n\n//     if (isLoginPage) {\n//       if (email && password) {\n//         dispatch(operations.logIn({ email, password }));\n//       }\n//     } else {\n//       if (name && email && password) {\n//         dispatch(operations.register({ name, email, password }));\n//       }\n//     }\n//   };\n\n// return (\n//   <>\n//     <h2>\n//       {isLoginPage ? (\n//         <span className=\"first\">Login </span>\n//       ) : (\n//         <span className=\"first\">Registration </span>\n//       )}\n//       Page\n//     </h2>\n//     <RegFormStyles autoComplete=\"off\" onSubmit={handleSubmit}>\n//       {!isLoginPage && (\n//         <div className=\"label-container\">\n//           <input\n//             placeholder=\"Name\"\n//             id=\"name\"\n//             type=\"text\"\n//             name=\"name\"\n//             onChange={handleChange}\n//             value={name}\n//           />\n//           <label htmlFor=\"name\">Name</label>\n//         </div>\n//       )}\n//       <div className=\"label-container\">\n//         <input\n//           placeholder=\"Email\"\n//           id=\"email\"\n//           type=\"email\"\n//           name=\"email\"\n//           onChange={handleChange}\n//           value={email}\n//         />\n//         <label htmlFor=\"email\">Email</label>\n//       </div>\n//       <div className=\"label-container\">\n//         <input\n//           placeholder=\"Password\"\n//           id=\"password\"\n//           type=\"password\"\n//           name=\"password\"\n//           onChange={handleChange}\n//           value={password}\n//         />\n//         <label htmlFor=\"password\">Password</label>\n//       </div>\n//       <button\n//         disabled={\n//           isLoginPage\n// ? !(!!email && password.length >= 7)\n//             : !(!!name && !!email && password.length >= 7)\n//         }\n//         type=\"submit\"\n//       >\n//         {isPending ? (\n//           <PiSpinnerGap className=\"spinner\" size={16} />\n//         ) : isLoginPage ? (\n//           <BiLogIn size={16} />\n//         ) : (\n//           <MdAppRegistration size={16} />\n//         )}\n//         {isLoginPage ? `Login` : `Registration`}\n//       </button>\n//     </RegFormStyles>\n//   </>\n// );\n// };\n\nexport default RegForm;\n","import Container from 'components/Container/Container';\nimport RegForm from 'components/RegForm/RegForm';\nimport { RegFormStyles } from 'components/RegForm/RegFormStyles.styled';\n\nconst RegistrationPage = () => {\n  return (\n    <RegFormStyles>\n      <Container>\n        <RegForm />\n      </Container>\n    </RegFormStyles>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["RegFormStyles","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","isLoginPage","useLocation","pathname","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleChange","_ref","target","value","_jsxs","_Fragment","children","_jsx","autoComplete","onSubmit","e","preventDefault","form","currentTarget","operations","elements","reset","className","placeholder","id","type","onChange","htmlFor","disabled","length","Container","RegForm"],"sourceRoot":""}