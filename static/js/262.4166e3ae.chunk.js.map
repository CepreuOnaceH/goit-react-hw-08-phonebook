{"version":3,"file":"static/js/262.4166e3ae.chunk.js","mappings":"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","sources":["components/RegForm/RegForm.jsx","components/RegForm/RegFormStyles.styled.js","pages/styles/LogRegStyles.js","pages/Login.jsx"],"sourcesContent":["import { useState } from 'react';\nimport operations from 'redux/auth/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getIsPending } from 'redux/auth/selectors';\nimport { PiSpinnerGap } from 'react-icons/pi';\nimport { MdAppRegistration } from 'react-icons/md';\nimport { BiLogIn } from 'react-icons/bi';\nimport { RegFormStyles } from './RegFormStyles.styled';\n\nconst RegForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isPending = useSelector(getIsPending);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const isLoginPage = location.pathname === '/login';\n\n  const handleChange = ({ target }) => {\n    if (isLoginPage) {\n      if (target.name === 'email') {\n        setEmail(target.value);\n      } else if (target.name === 'password') {\n        setPassword(target.value);\n      }\n    } else {\n      if (target.name === 'name') {\n        setName(target.value);\n      } else if (target.name === 'email') {\n        setEmail(target.value);\n      } else if (target.name === 'password') {\n        setPassword(target.value);\n      }\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isLoginPage) {\n      if (email && password) {\n        dispatch(operations.logIn({ email, password }));\n      }\n    } else {\n      if (name && email && password) {\n        dispatch(operations.register({ name, email, password }));\n      }\n    }\n  };\n\n  return (\n    <>\n      <h2>\n        {isLoginPage ? (\n          <span className=\"first\">Login </span>\n        ) : (\n          <span className=\"first\">Registration </span>\n        )}\n        Page\n      </h2>\n      <RegFormStyles autoComplete=\"off\" onSubmit={handleSubmit}>\n        {!isLoginPage && (\n          <div className=\"label-container\">\n            <input\n              placeholder=\"Name\"\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              onChange={handleChange}\n              value={name}\n            />\n            <label htmlFor=\"name\">Name</label>\n          </div>\n        )}\n        <div className=\"label-container\">\n          <input\n            placeholder=\"Email\"\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            value={email}\n          />\n          <label htmlFor=\"email\">Email</label>\n        </div>\n        <div className=\"label-container\">\n          <input\n            placeholder=\"Password\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            value={password}\n          />\n          <label htmlFor=\"password\">Password</label>\n        </div>\n        <button\n          disabled={\n            isLoginPage\n              ? !(!!email && password.length >= 7)\n              : !(!!name && !!email && password.length >= 7)\n          }\n          type=\"submit\"\n        >\n          {isPending ? (\n            <PiSpinnerGap className=\"spinner\" size={16} />\n          ) : isLoginPage ? (\n            <BiLogIn size={16} />\n          ) : (\n            <MdAppRegistration size={16} />\n          )}\n          {isLoginPage ? `Login` : `Registration`}\n        </button>\n      </RegFormStyles>\n    </>\n  );\n};\n\nexport default RegForm;\n","import styled from 'styled-components';\n\nexport const RegFormStyles = styled.form`\n  padding-top: 40px;\n  padding-bottom: 20px;\n  row-gap: 40px;\n  display: flex;\n  flex-direction: column;\n\n  margin-left: auto;\n  margin-right: auto;\n  /* label {\n    display: flex;\n    flex-direction: column;\n    row-gap: 10px;\n    align-items: center;\n  } */\n  .label-container {\n    width: 180px;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    display: inline-block;\n  }\n\n  label {\n    position: absolute;\n    left: 8px;\n    bottom: 50%;\n    transition: 250ms linear;\n    transform: translate(0, 50%);\n    font-size: 14px;\n    color: blue;\n  }\n\n  input:focus + label {\n    transform: translateY(-100%);\n  }\n\n  input:not(:placeholder-shown) + label {\n    transform: translateY(-100%);\n  }\n\n  input {\n    border-radius: 8px;\n    padding-left: 10px;\n    height: 20px;\n  }\n\n  input::placeholder {\n    opacity: 0;\n  }\n\n  button {\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 8px;\n    padding: 8px 12px;\n    background-color: green;\n    color: white;\n    transition: 250ms linear;\n    column-gap: 8px;\n  }\n\n  button:hover,\n  button:focus {\n    background-color: blue;\n  }\n\n  button[disabled] {\n    background-color: gray;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LoegRegStyles = styled.section`\n  text-align: center;\n  padding-top: 50px;\n\n  h2 {\n    margin-bottom: 20px;\n  }\n`;\n","import Container from 'components/Container/Container';\nimport RegForm from 'components/RegForm/RegForm';\nimport { LoegRegStyles } from './styles/LogRegStyles';\nconst LoginPage = () => {\n  return (\n    <LoegRegStyles>\n      <Container>\n        <RegForm />\n      </Container>\n    </LoegRegStyles>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","isPending","useSelector","getIsPending","dispatch","useDispatch","isLoginPage","useLocation","pathname","handleChange","_ref","target","value","_jsxs","_Fragment","children","_jsx","className","RegFormStyles","autoComplete","onSubmit","e","preventDefault","operations","placeholder","id","type","onChange","htmlFor","disabled","length","PiSpinnerGap","size","BiLogIn","MdAppRegistration","styled","_templateObject","_taggedTemplateLiteral","LoegRegStyles","Container","RegForm"],"sourceRoot":""}